% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_ensemble_votes.R
\name{make_ensemble_votes}
\alias{make_ensemble_votes}
\title{Create Ensemble Model Predictions from Multiple Classifiers}
\usage{
make_ensemble_votes(
  datasc,
  levs,
  modlist,
  model_res,
  param = "Kappa_l1out",
  min_val = 0,
  prop = TRUE,
  only_1_knn = FALSE
)
}
\arguments{
\item{datasc}{A data frame containing the true class labels in a column named \code{class}.}

\item{levs}{A character vector of class levels (e.g., \code{c("control", "case")}).}

\item{modlist}{A named list of trained models with prediction outputs in \code{modlist[[model]]$preds}.}

\item{model_res}{A data frame containing evaluation metrics for each model, including a column with model names (\code{model}) and a column with the performance metric specified in \code{param}.}

\item{param}{A character string indicating the name of the model performance column to use for model selection and weighting. Default is \code{"Kappa_l1out"}.}

\item{min_val}{Minimum acceptable value for the selected performance metric. Only models with at least this value will be used in the ensemble. Default: \code{0}.}

\item{prop}{Logical; if \code{TRUE}, models are weighted proportionally to their performance on \code{param}. If \code{FALSE}, all selected models have equal weight. Default: \code{TRUE}.}

\item{only_1_knn}{Logical; if \code{TRUE}, only the best KNN model is kept (others are removed). Default: \code{FALSE}.}
}
\value{
A list with the following elements:
\itemize{
\item \code{confmat}: Confusion matrix from the ensemble predictions.
\item \code{confmat_no_l1o}: Always \code{NULL} (placeholder).
\item \code{mod}: Always \code{NULL} (placeholder).
\item \code{preds}: Factor vector of predicted class labels.
\item \code{pred_df}: Data frame of individual model predictions used for the ensemble.
\item \code{preds_no_l1o}: Always \code{NULL} (placeholder).
\item \code{roc_obj_no_l1o}: Always \code{NULL} (placeholder).
\item \code{roc_auc_no_l1o}: Always \code{NULL} (placeholder).
\item \code{roc_obj}: ROC object from \code{pROC::roc()} or \code{pROC::multiclass.roc()}.
\item \code{roc_auc}: Numeric AUC value from the ensemble prediction.
}
}
\description{
This function performs ensemble classification using predictions
from multiple models, with optional performance-based weighting. It returns a confusion matrix,
predicted labels, and AUC for binary or multiclass classification.
}
\details{
The function aggregates predictions from multiple models based on either equal weighting or performance-weighted voting.
If \code{only_1_knn = TRUE}, only the top KNN model (based on \code{param}) is used; others are excluded.

In binary classification, the ensemble probability is used to compute AUC with \code{pROC::roc()}. For multiclass problems, \code{pROC::multiclass.roc()} is used.

All models must have predictions available in \code{modlist[[model]]$preds}. The true class labels must be in \code{datasc$class}.

Typical values for \code{param} include:
\itemize{
\item \code{"Kappa_l1out"}: Cohen's kappa on CV predictions.
\item \code{"Accuracy_l1out"}: Accuracy on CV predictions.
\item \code{"AUC_l1out"}: AUC on CV predictions.
}

Models are selected if their \code{param} is greater than or equal to \code{min_val}.
}
\examples{
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
}
\seealso{
\code{\link[dplyr]{arrange}}, \code{\link[dplyr]{filter}}
\code{\link[purrr]{map}}
}
